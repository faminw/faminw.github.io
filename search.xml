<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hello World</title>
    <url>/2021/05/17/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2021/05/21/%E4%B8%80%E9%81%93%E7%BC%96%E7%A8%8B%E9%A2%98/</url>
    <content><![CDATA[<h2 id="一道编程题"><a href="#一道编程题" class="headerlink" title="一道编程题"></a>一道编程题</h2><p>偶然间看到的一道数据分析题目，<a href="https://www.saikr.com/c/nd/7819">原文链接</a>。</p>
<ol>
<li><p>话不多说，第一题合并csv文件的操作和合并普通tet文件的操作如出一辙，代码如下。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">Created on Wed May 19 20:13:26 2021</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">@author: 土豆人</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>():</span></span><br><span class="line">    <span class="comment"># open oder1.csv</span></span><br><span class="line">    outfile = <span class="built_in">open</span>(<span class="string">&quot;order0.csv&quot;</span>, <span class="string">&quot;a&quot;</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 分别打开order1,2,3并写入oder0文件</span></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;order1.csv&quot;</span>, <span class="string">&quot;r&quot;</span>) <span class="keyword">as</span> fa:</span><br><span class="line">        outfile.write(fa.read())</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;order2.csv&quot;</span>, <span class="string">&quot;r&quot;</span>) <span class="keyword">as</span> fb:</span><br><span class="line">        outfile.write(fb.read())</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;order3.csv&quot;</span>, <span class="string">&quot;r&quot;</span>) <span class="keyword">as</span> fc:</span><br><span class="line">        outfile.write(fc.read())</span><br><span class="line">        </span><br><span class="line">    <span class="comment"># close order0.csv</span></span><br><span class="line">    outfile.close()</span><br><span class="line">    </span><br><span class="line">main()</span><br></pre></td></tr></table></figure></li>
<li><p>再往后看，就会发现，后面四题都有一些相似点，均需要销售额和绘图，暂且将后面四题归为一类。事实上做完后才发现，做第二题几乎花费了做整篇文章一半的时间。</p>
</li>
</ol>
<ul>
<li>1 求每日销售额。其实求销售额就是一个二级运算，但是看了一下数据后才发现，原来是我太单纯。</li>
<li>2 绘制折线图，我使用的是python的matplotlib包绘图，自我感觉python画折线图比excel难很多，如果使用python和excel结合操作csv文件会简单很多。</li>
<li>3 其中还有很多注意事项，比如无法正常显示中文。篇幅有限，就不再过多赘诉。第二题代码如下。<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">Created on Thu May 20 09:28:20 2021</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">@author: 土豆人</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line"><span class="comment"># 正常显示中文</span></span><br><span class="line"><span class="keyword">from</span> pylab <span class="keyword">import</span> *</span><br><span class="line">mpl.rcParams[<span class="string">&#x27;font.sans-serif&#x27;</span>] = [<span class="string">&#x27;SimHei&#x27;</span>]</span><br><span class="line"></span><br><span class="line">filename = <span class="built_in">open</span>(<span class="string">&quot;order0.csv&quot;</span>)</span><br><span class="line">data = pd.DataFrame(pd.read_csv(filename))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 更换money列的数据格式</span></span><br><span class="line"><span class="comment"># data[&#x27;money&#x27;].astype(int)</span></span><br><span class="line"><span class="comment"># s = pd.Series(data[&#x27;money&#x27;])</span></span><br><span class="line"><span class="comment"># s = pd.to_numeric(data[&#x27;money&#x27;], downcast=&#x27;integer&#x27;)</span></span><br><span class="line"><span class="comment"># data[&#x27;money&#x27;] = pd.to_numeric(data[&#x27;money&#x27;])</span></span><br><span class="line">data[<span class="string">&#x27;money&#x27;</span>] = pd.to_numeric(data[<span class="string">&#x27;money&#x27;</span>], errors=<span class="string">&#x27;coerce&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 用列表将每天销售额存储起来</span></span><br><span class="line">a = [<span class="string">&#x27;1&#x27;</span>,<span class="string">&#x27;2&#x27;</span>,<span class="string">&#x27;3&#x27;</span>,<span class="string">&#x27;4&#x27;</span>,<span class="string">&#x27;5&#x27;</span>,<span class="string">&#x27;6&#x27;</span>,<span class="string">&#x27;7&#x27;</span>,<span class="string">&#x27;8&#x27;</span>,<span class="string">&#x27;9&#x27;</span>,<span class="string">&#x27;10&#x27;</span>,<span class="string">&#x27;11&#x27;</span>,<span class="string">&#x27;12&#x27;</span>,<span class="string">&#x27;13&#x27;</span>,<span class="string">&#x27;14&#x27;</span>,<span class="string">&#x27;15&#x27;</span>,<span class="string">&#x27;16&#x27;</span>,<span class="string">&#x27;17&#x27;</span>,<span class="string">&#x27;18&#x27;</span>,<span class="string">&#x27;19&#x27;</span>,<span class="string">&#x27;20&#x27;</span>,<span class="string">&#x27;21&#x27;</span>,<span class="string">&#x27;22&#x27;</span>,<span class="string">&#x27;23&#x27;</span>,<span class="string">&#x27;24&#x27;</span>,<span class="string">&#x27;25&#x27;</span>,<span class="string">&#x27;26&#x27;</span>,<span class="string">&#x27;27&#x27;</span>,<span class="string">&#x27;28&#x27;</span>,<span class="string">&#x27;29&#x27;</span>,<span class="string">&#x27;30&#x27;</span>,<span class="string">&#x27;31&#x27;</span>]</span><br><span class="line">b = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> a:</span><br><span class="line">    b.append(data.loc[(data[<span class="string">&#x27;day&#x27;</span>] == i), [<span class="string">&#x27;money&#x27;</span>, <span class="string">&#x27;day&#x27;</span>]].money.<span class="built_in">sum</span>())</span><br><span class="line"></span><br><span class="line"><span class="comment"># 绘制折线图</span></span><br><span class="line">x = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span>,<span class="number">11</span>,<span class="number">12</span>,<span class="number">13</span>,<span class="number">14</span>,<span class="number">15</span>,<span class="number">16</span>,<span class="number">17</span>,<span class="number">18</span>,<span class="number">19</span>,<span class="number">20</span>,<span class="number">21</span>,<span class="number">22</span>,<span class="number">23</span>,<span class="number">24</span>,<span class="number">25</span>,<span class="number">26</span>,<span class="number">27</span>,<span class="number">28</span>,<span class="number">29</span>,<span class="number">30</span>,<span class="number">31</span>]</span><br><span class="line">y = b</span><br><span class="line"></span><br><span class="line">plt.figure(figsize = (<span class="number">10</span>,<span class="number">10</span>))</span><br><span class="line">plt.plot(x,y,<span class="string">&quot;b-&quot;</span>,linewidth=<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">plt.xlabel(<span class="string">&quot;day&quot;</span>)</span><br><span class="line">plt.ylabel(<span class="string">&quot;money&quot;</span>)</span><br><span class="line">plt.title(<span class="string">&quot;每天销售额折线图&quot;</span>)</span><br><span class="line"></span><br><span class="line">plt.savefig(<span class="string">&quot;每天销售额折线图.jpg&quot;</span>)</span><br></pre></td></tr></table></figure></li>
</ul>
<ol start="3">
<li><p>第三题和第二题很相似，每日销售额变成了每周销售额，绘制折线图变成了绘制柱状图。代码如下。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">Created on Thu May 20 13:50:30 2021</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">@author: 土豆人</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 已经用excel得到星期，并单独成列</span></span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line"><span class="comment"># 正常显示中文</span></span><br><span class="line"><span class="keyword">from</span> pylab <span class="keyword">import</span> *</span><br><span class="line">mpl.rcParams[<span class="string">&#x27;font.sans-serif&#x27;</span>] = [<span class="string">&#x27;SimHei&#x27;</span>]</span><br><span class="line"></span><br><span class="line">filename = <span class="built_in">open</span>(<span class="string">&quot;order0.csv&quot;</span>)</span><br><span class="line">data = pd.DataFrame(pd.read_csv(filename))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 转换money列数据格式</span></span><br><span class="line">data[<span class="string">&#x27;money&#x27;</span>] = pd.to_numeric(data[<span class="string">&#x27;money&#x27;</span>], errors=<span class="string">&#x27;coerce&#x27;</span>)</span><br><span class="line"></span><br><span class="line">d = [<span class="string">&#x27;星期一&#x27;</span>,<span class="string">&#x27;星期二&#x27;</span>,<span class="string">&#x27;星期三&#x27;</span>,<span class="string">&#x27;星期四&#x27;</span>,<span class="string">&#x27;星期五&#x27;</span>,<span class="string">&#x27;星期六&#x27;</span>,<span class="string">&#x27;星期日&#x27;</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 用列表将每个星期销售额存储起来</span></span><br><span class="line">b = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> d:</span><br><span class="line">    b.append(data.loc[(data[<span class="string">&#x27;week&#x27;</span>] == i), [<span class="string">&#x27;money&#x27;</span>, <span class="string">&#x27;week&#x27;</span>]].money.<span class="built_in">sum</span>())</span><br><span class="line"></span><br><span class="line"><span class="comment"># 绘制柱状图</span></span><br><span class="line">name_list = d</span><br><span class="line">num_list = b</span><br><span class="line">plt.bar(<span class="built_in">range</span>(<span class="built_in">len</span>(num_list)), num_list, tick_label=name_list)</span><br><span class="line"></span><br><span class="line">plt.title(<span class="string">&quot;每星期销售额柱状图&quot;</span>)</span><br><span class="line">plt.savefig(<span class="string">&quot;每星期销售额柱状图.jpg&quot;</span>)</span><br></pre></td></tr></table></figure></li>
<li><p>这一题与上一题数据可以不用更改，但是难点就在绘制圆环图上了，万维网的好处在这里便体现的淋漓尽致。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">Created on Thu May 20 15:16:30 2021</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">@author: 土豆人</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line"><span class="comment"># 正常显示中文</span></span><br><span class="line"><span class="keyword">from</span> pylab <span class="keyword">import</span> *</span><br><span class="line">mpl.rcParams[<span class="string">&#x27;font.sans-serif&#x27;</span>] = [<span class="string">&#x27;SimHei&#x27;</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 读取文件</span></span><br><span class="line">filename = <span class="built_in">open</span>(<span class="string">&quot;order0.csv&quot;</span>)</span><br><span class="line">data = pd.DataFrame(pd.read_csv(filename))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 转换money列数据格式</span></span><br><span class="line">data[<span class="string">&#x27;money&#x27;</span>] = pd.to_numeric(data[<span class="string">&#x27;money&#x27;</span>], errors=<span class="string">&#x27;coerce&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将星期和每星期销售额写成字典</span></span><br><span class="line">zidian = &#123;&#125;</span><br><span class="line">d = [<span class="string">&#x27;星期一&#x27;</span>,<span class="string">&#x27;星期二&#x27;</span>,<span class="string">&#x27;星期三&#x27;</span>,<span class="string">&#x27;星期四&#x27;</span>,<span class="string">&#x27;星期五&#x27;</span>,<span class="string">&#x27;星期六&#x27;</span>,<span class="string">&#x27;星期日&#x27;</span>]</span><br><span class="line"><span class="keyword">for</span> key <span class="keyword">in</span> d:</span><br><span class="line">    zidian[key] = data.loc[(data[<span class="string">&#x27;week&#x27;</span>] == key), [<span class="string">&#x27;money&#x27;</span>, <span class="string">&#x27;week&#x27;</span>]].money.<span class="built_in">sum</span>()</span><br><span class="line"></span><br><span class="line">candidate = [key <span class="keyword">for</span> key <span class="keyword">in</span> zidian]</span><br><span class="line">votes = [value <span class="keyword">for</span> value <span class="keyword">in</span> zidian.values()]</span><br><span class="line">plt.figure(figsize=(<span class="number">10</span>, <span class="number">15</span>), dpi=<span class="number">100</span>)</span><br><span class="line">explode = (<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 外环，需要设置七个颜色</span></span><br><span class="line">plt.pie(votes, labels=candidate, explode=explode, autopct=<span class="string">&quot;%1.2f%%&quot;</span>, colors=[<span class="string">&#x27;c&#x27;</span>, <span class="string">&#x27;m&#x27;</span>, <span class="string">&#x27;y&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;g&#x27;</span>, <span class="string">&#x27;r&#x27;</span>, <span class="string">&#x27;k&#x27;</span>],</span><br><span class="line">        textprops=&#123;<span class="string">&#x27;fontsize&#x27;</span>: <span class="number">24</span>&#125;, labeldistance=<span class="number">1.05</span>, pctdistance=<span class="number">0.85</span>, startangle=<span class="number">90</span>)</span><br><span class="line"><span class="comment"># 内环</span></span><br><span class="line">plt.pie([<span class="number">1</span>], radius=<span class="number">0.7</span>, colors=<span class="string">&#x27;w&#x27;</span>)</span><br><span class="line"></span><br><span class="line">plt.legend(loc=<span class="string">&#x27;upper right&#x27;</span>, fontsize=<span class="number">16</span>)</span><br><span class="line"><span class="comment"># 修改题目</span></span><br><span class="line">plt.title(<span class="string">&quot;星期与销售额占比&quot;</span>, fontsize=<span class="number">24</span>)</span><br><span class="line">plt.axis(<span class="string">&#x27;equal&#x27;</span>)</span><br><span class="line">plt.savefig(<span class="string">&quot;星期与销售额占比.jpg&quot;</span>)</span><br></pre></td></tr></table></figure></li>
<li><p>最后一题，抓紧时间，说完干正事去了。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">Created on Thu May 20 18:41:23 2021</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">@author: 土豆人</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line"><span class="comment"># 正常显示中文</span></span><br><span class="line"><span class="keyword">from</span> pylab <span class="keyword">import</span> *</span><br><span class="line">mpl.rcParams[<span class="string">&#x27;font.sans-serif&#x27;</span>] = [<span class="string">&#x27;SimHei&#x27;</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 读取文件</span></span><br><span class="line">filename = <span class="built_in">open</span>(<span class="string">&quot;order0.csv&quot;</span>)</span><br><span class="line">data = pd.DataFrame(pd.read_csv(filename))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 转换money,counts列数据格式</span></span><br><span class="line">data[<span class="string">&#x27;money&#x27;</span>] = pd.to_numeric(data[<span class="string">&#x27;money&#x27;</span>], errors=<span class="string">&#x27;coerce&#x27;</span>)</span><br><span class="line">data[<span class="string">&#x27;counts&#x27;</span>] = pd.to_numeric(data[<span class="string">&#x27;counts&#x27;</span>], errors=<span class="string">&#x27;coerce&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 需要星期，订单量，销售额</span></span><br><span class="line">d = [<span class="string">&#x27;星期一&#x27;</span>,<span class="string">&#x27;星期二&#x27;</span>,<span class="string">&#x27;星期三&#x27;</span>,<span class="string">&#x27;星期四&#x27;</span>,<span class="string">&#x27;星期五&#x27;</span>,<span class="string">&#x27;星期六&#x27;</span>,<span class="string">&#x27;星期日&#x27;</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 用列表将每个星期销售额,订单量存储起来</span></span><br><span class="line">b = [] <span class="comment"># 销售额</span></span><br><span class="line">c = [] <span class="comment"># 订单量</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> d:</span><br><span class="line">    b.append(data.loc[(data[<span class="string">&#x27;week&#x27;</span>] == i), [<span class="string">&#x27;money&#x27;</span>, <span class="string">&#x27;week&#x27;</span>]].money.<span class="built_in">sum</span>())</span><br><span class="line">    c.append(data.loc[(data[<span class="string">&#x27;week&#x27;</span>] == i), [<span class="string">&#x27;counts&#x27;</span>, <span class="string">&#x27;week&#x27;</span>]].counts.<span class="built_in">sum</span>())</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">plt.scatter(d, c, s=<span class="number">200</span>, c=[<span class="string">&#x27;c&#x27;</span>, <span class="string">&#x27;m&#x27;</span>, <span class="string">&#x27;y&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;g&#x27;</span>, <span class="string">&#x27;r&#x27;</span>, <span class="string">&#x27;k&#x27;</span>], alpha=<span class="number">1</span>)  <span class="comment"># 画散点图, alpha=0.6 表示不透明度为 0.6</span></span><br><span class="line">plt.ylim([<span class="number">0</span>, <span class="number">6000</span>])  <span class="comment"># 纵坐标轴范围</span></span><br><span class="line">plt.xlim([<span class="number">0</span>,<span class="number">7</span>])   <span class="comment"># 横坐标轴范围</span></span><br><span class="line">plt.xlabel(<span class="string">&#x27;星期&#x27;</span>)  <span class="comment"># 横坐标轴标题</span></span><br><span class="line">plt.ylabel(<span class="string">&#x27;订单量&#x27;</span>)  <span class="comment"># 纵坐标轴标题</span></span><br><span class="line">plt.title(<span class="string">&quot;订单量，星期，销售额关系&quot;</span>, fontsize=<span class="number">24</span>)</span><br><span class="line">plt.savefig(<span class="string">&quot;订单量，星期，销售额关系.jpg&quot;</span>)</span><br></pre></td></tr></table></figure></li>
</ol>
<p>最后，艰难的一次数据分析，膜拜一下大佬。</p>
<h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><h6 id="pandas用法大全-pandas用法大全-liufang0001的博客-CSDN博客-pandas-https-blog-csdn-net-liufang0001-article-details-77856255-ops-request-misc-7B-22request-5Fid-22-3A-22162143230216780274170555-22-2C-22scm-22-3A-2220140713-130102334-22-7D-amp-request-id-162143230216780274170555-amp-biz-id-0-amp-utm-medium-distribute-pc-search-result-none-task-blog-2-all-sobaiduend-default-1-77856255-first-rank-v2-pc-rank-v29-amp-utm-term-pandas用法大全-amp-spm-1018-2226-3001-4187"><a href="#pandas用法大全-pandas用法大全-liufang0001的博客-CSDN博客-pandas-https-blog-csdn-net-liufang0001-article-details-77856255-ops-request-misc-7B-22request-5Fid-22-3A-22162143230216780274170555-22-2C-22scm-22-3A-2220140713-130102334-22-7D-amp-request-id-162143230216780274170555-amp-biz-id-0-amp-utm-medium-distribute-pc-search-result-none-task-blog-2-all-sobaiduend-default-1-77856255-first-rank-v2-pc-rank-v29-amp-utm-term-pandas用法大全-amp-spm-1018-2226-3001-4187" class="headerlink" title="pandas用法大全 pandas用法大全_liufang0001的博客-CSDN博客_pandas](https://blog.csdn.net/liufang0001/article/details/77856255?ops_request_misc=%7B%22request%5Fid%22%3A%22162143230216780274170555%22%2C%22scm%22%3A%2220140713.130102334..%22%7D&amp;request_id=162143230216780274170555&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduend~default-1-77856255.first_rank_v2_pc_rank_v29&amp;utm_term=pandas用法大全&amp;spm=1018.2226.3001.4187))"></a><a href="%5B(16%E6%9D%A1%E6%B6%88%E6%81%AF">pandas用法大全</a> pandas用法大全_liufang0001的博客-CSDN博客_pandas](<a href="https://blog.csdn.net/liufang0001/article/details/77856255?ops_request_misc=%7B%22request_id%22:%22162143230216780274170555%22,%22scm%22:%2220140713.130102334..%22%7D&amp;request_id=162143230216780274170555&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduend~default-1-77856255.first_rank_v2_pc_rank_v29&amp;utm_term=pandas%E7%94%A8%E6%B3%95%E5%A4%A7%E5%85%A8&amp;spm=1018.2226.3001.4187">https://blog.csdn.net/liufang0001/article/details/77856255?ops_request_misc=%7B%22request%5Fid%22%3A%22162143230216780274170555%22%2C%22scm%22%3A%2220140713.130102334..%22%7D&amp;request_id=162143230216780274170555&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduend~default-1-77856255.first_rank_v2_pc_rank_v29&amp;utm_term=pandas用法大全&amp;spm=1018.2226.3001.4187</a>))</h6><h6 id="用-matplotlib-绘制圆环形嵌套饼图步骤详解"><a href="#用-matplotlib-绘制圆环形嵌套饼图步骤详解" class="headerlink" title="用 matplotlib 绘制圆环形嵌套饼图步骤详解"></a><a href="https://www.cnblogs.com/shanger/p/13074100.html">用 matplotlib 绘制圆环形嵌套饼图步骤详解</a></h6><h6 id="在Pandas中更改列的数据类型-在Pandas中更改列的数据类型-方法总结-xitingxie-博客园-cnblogs-com"><a href="#在Pandas中更改列的数据类型-在Pandas中更改列的数据类型-方法总结-xitingxie-博客园-cnblogs-com" class="headerlink" title="[在Pandas中更改列的数据类型](在Pandas中更改列的数据类型[方法总结] - xitingxie - 博客园 (cnblogs.com))"></a>[在Pandas中更改列的数据类型](<a href="https://www.cnblogs.com/xitingxie/p/8426340.html">在Pandas中更改列的数据类型[方法总结] - xitingxie - 博客园 (cnblogs.com)</a>)</h6><h6 id="用-python-画散点图与气泡图-用-python-画散点图与气泡图-天天向上的专栏-CSDN博客-python-气泡图-https-blog-csdn-net-robert-chen1988-article-details-100027423-ops-request-misc-7B-22request-5Fid-22-3A-22162152161616780366575465-22-2C-22scm-22-3A-2220140713-130102334-22-7D-amp-request-id-162152161616780366575465-amp-biz-id-0-amp-utm-medium-distribute-pc-search-result-none-task-blog-2-all-sobaiduend-default-1-100027423-first-rank-v2-pc-rank-v29-amp-utm-term-python绘制气泡图-amp-spm-1018-2226-3001-4187"><a href="#用-python-画散点图与气泡图-用-python-画散点图与气泡图-天天向上的专栏-CSDN博客-python-气泡图-https-blog-csdn-net-robert-chen1988-article-details-100027423-ops-request-misc-7B-22request-5Fid-22-3A-22162152161616780366575465-22-2C-22scm-22-3A-2220140713-130102334-22-7D-amp-request-id-162152161616780366575465-amp-biz-id-0-amp-utm-medium-distribute-pc-search-result-none-task-blog-2-all-sobaiduend-default-1-100027423-first-rank-v2-pc-rank-v29-amp-utm-term-python绘制气泡图-amp-spm-1018-2226-3001-4187" class="headerlink" title="用 python 画散点图与气泡图 用 python 画散点图与气泡图_天天向上的专栏-CSDN博客_python 气泡图](https://blog.csdn.net/robert_chen1988/article/details/100027423?ops_request_misc=%7B%22request%5Fid%22%3A%22162152161616780366575465%22%2C%22scm%22%3A%2220140713.130102334..%22%7D&amp;request_id=162152161616780366575465&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduend~default-1-100027423.first_rank_v2_pc_rank_v29&amp;utm_term=python绘制气泡图&amp;spm=1018.2226.3001.4187))"></a><a href="%5B(16%E6%9D%A1%E6%B6%88%E6%81%AF">用 python 画散点图与气泡图</a> 用 python 画散点图与气泡图_天天向上的专栏-CSDN博客_python 气泡图](<a href="https://blog.csdn.net/robert_chen1988/article/details/100027423?ops_request_misc=%7B%22request_id%22:%22162152161616780366575465%22,%22scm%22:%2220140713.130102334..%22%7D&amp;request_id=162152161616780366575465&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduend~default-1-100027423.first_rank_v2_pc_rank_v29&amp;utm_term=python%E7%BB%98%E5%88%B6%E6%B0%94%E6%B3%A1%E5%9B%BE&amp;spm=1018.2226.3001.4187">https://blog.csdn.net/robert_chen1988/article/details/100027423?ops_request_misc=%7B%22request%5Fid%22%3A%22162152161616780366575465%22%2C%22scm%22%3A%2220140713.130102334..%22%7D&amp;request_id=162152161616780366575465&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduend~default-1-100027423.first_rank_v2_pc_rank_v29&amp;utm_term=python绘制气泡图&amp;spm=1018.2226.3001.4187</a>))</h6>]]></content>
  </entry>
</search>
